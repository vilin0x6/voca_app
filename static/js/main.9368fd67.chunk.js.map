{"version":3,"sources":["hooks/useFetch.js","components/DayList.js","components/Header.js","components/Word.js","components/Day.js","components/EmptyPage.js","components/CreateWord.js","components/CreateDay.js","App.js","index.js"],"names":["useFetch","url","useState","data","setData","useEffect","fetch","then","response","json","DayList","days","length","className","map","day","to","id","Header","Word","w","word","setWord","isShow","setIsShow","isDone","setIsDone","type","checked","onChange","method","headers","body","JSON","stringify","ok","eng","kor","onClick","window","confirm","Day","useParams","words","EmptyPage","CreateWord","history","useHistory","isLoading","setIsLoading","engRef","useRef","korRef","dayRef","onSubmit","e","preventDefault","current","value","alert","push","placeholder","ref","style","opacity","CreateDay","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAEe,SAASA,EAASC,GAC/B,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,qBAAW,WAEPC,MAAML,GACLM,MAAK,SAAAC,GAEJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAJ,GACJC,EAAQD,QAEX,CAACF,IAEGE,E,WCdM,SAASO,IAEtB,IAAMC,EAAOX,EAAS,8BAGtB,OAAmB,IAAhBW,EAAKC,OACC,8CAIP,oBAAIC,UAAU,WAAd,SACGF,EAAKG,KAAI,SAAAC,GAAG,OACX,6BACE,eAAC,IAAD,CAAMC,GAAE,wBAAmBD,EAAIA,KAA/B,iBAA2CA,EAAIA,QADxCA,EAAIE,SCbN,SAASC,IACtB,OACE,sBAAKL,UAAU,SAAf,UACE,6BACE,cAAC,IAAD,CAAMG,GAAG,YAAT,qCAEF,sBAAKH,UAAU,OAAf,UACE,cAAC,IAAD,CAAMG,GAAG,wBAAwBH,UAAU,OAA3C,uCAGA,cAAC,IAAD,CAAMG,GAAG,uBAAuBH,UAAU,OAA1C,oC,YCVO,SAASM,EAAT,GAA4B,IAANC,EAAK,EAAXC,KAC7B,EAAwBnB,mBAASkB,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BpB,oBAAS,GAArC,mBAAOqB,EAAP,KAAeC,EAAf,KACA,EAA4BtB,mBAASmB,EAAKI,QAA1C,mBAAOA,EAAP,KAAeC,EAAf,KAsCA,OAAgB,IAAZL,EAAKJ,GACA,KAIP,qBAAIJ,UAAYY,EAAS,MAAQ,GAAjC,UACE,6BACE,uBAAOE,KAAK,WAAWC,QAASH,EAChCI,SAxCN,WAEEvB,MAAM,+BAAD,OAAgCe,EAAKJ,IAAM,CAC9Ca,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAL,2BACDb,GADC,IAEJI,QAASA,OAGZlB,MAAM,SAAAC,GACFA,EAAS2B,IACVT,GAAWD,WA4Bb,6BAAKJ,EAAKe,MACV,6BAAKb,GAAUF,EAAKgB,MACpB,+BACE,wBAAQC,QAjDd,WACEd,GAAWD,IAgDP,SACIA,EAAS,4BAAU,gCAEvB,wBAAQe,QA7Bd,WACKC,OAAOC,QAAQ,uDAChBlC,MAAM,+BAAD,OAAgCe,EAAKJ,IAAM,CAC9Ca,OAAQ,WACPvB,MAAM,SAAAC,GACJA,EAAS2B,IACVb,EAAQ,CAAEL,GAAI,QAuBMJ,UAAU,UAAhC,gC,WCvDO,SAAS4B,IAGtB,IAAQ1B,EAAQ2B,cAAR3B,IAEF4B,EAAQ3C,EAAS,mCAAD,OAAoCe,IAE1D,OACE,qCACE,sCAASA,KACS,IAAjB4B,EAAM/B,QAAgB,8CACvB,gCACE,gCACG+B,EAAM7B,KAAI,SAAAO,GAAI,OACb,cAACF,EAAD,CAAME,KAAMA,GAAWA,EAAKJ,cChBzB,SAAS2B,IACtB,OACE,qCACE,oFACA,cAAC,IAAD,CAAM5B,GAAG,YAAT,yCCFS,SAAS6B,IACtB,IAAMlC,EAAOX,EAAS,8BAChB8C,EAAUC,cAChB,EAAkC7C,oBAAS,GAA3C,mBAAO8C,EAAP,KAAkBC,EAAlB,KAiCA,IAAMC,EAASC,iBAAO,MAChBC,EAASD,iBAAO,MAChBE,EAASF,iBAAO,MAEtB,OACE,uBAAMG,SApCR,SAAkBC,GAEhBA,EAAEC,iBAGER,IACFC,GAAa,GACb3C,MAAM,+BAAgC,CACtCwB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBnB,IAAKsC,EAAOI,QAAQC,MACpBtB,IAAKc,EAAOO,QAAQC,MACpBrB,IAAKe,EAAOK,QAAQC,MACpBjC,QAAQ,MAGTlB,MAAM,SAAAC,GACFA,EAAS2B,KACVwB,MAAM,kEAENb,EAAQc,KAAR,wBAA8BP,EAAOI,QAAQC,QAC7CT,GAAa,SAYnB,UACE,sBAAKpC,UAAU,aAAf,UACE,wCACA,uBAAOc,KAAK,OAAOkC,YAAY,UAAUC,IAAKZ,OAEhD,sBAAKrC,UAAU,aAAf,UACE,wCACA,uBAAOc,KAAK,OAAOkC,YAAY,qBAAMC,IAAKV,OAE5C,sBAAKvC,UAAU,aAAf,UACE,wCACA,wBAAQiD,IAAKT,EAAb,SACG1C,EAAKG,KAAI,SAAAC,GAAG,OACX,wBAAqB2C,MAAO3C,EAAIA,IAAhC,SACGA,EAAIA,KADMA,EAAIE,YAOvB,wBACE8C,MAAO,CACLC,QAAShB,EAAY,GAAM,GAF/B,SAKGA,EAAY,YAAc,oBCnEpB,SAASiB,IACtB,IAAMtD,EAAOX,EAAS,8BAChB8C,EAAUC,cAqBhB,OACA,gCACE,6DAAYpC,EAAKC,OAAjB,YACA,wBAAQ0B,QAtBV,WACEhC,MAAM,8BAA+B,CACnCwB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBnB,IAAKJ,EAAKC,OAAS,MAGtBL,MAAM,SAAAC,GACFA,EAAS2B,KACVwB,MAAM,kEAENb,EAAQc,KAAK,kBAQjB,iCCOWM,MA5Bf,WACE,OACE,cAAC,IAAD,UACE,sBAAKrD,UAAU,MAAf,UACE,cAACK,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiD,OAAK,EAACC,KAAK,YAAlB,SACE,cAAC1D,EAAD,MAEF,cAAC,IAAD,CAAO0D,KAAK,qBAAZ,SACE,cAAC3B,EAAD,MAEF,cAAC,IAAD,CAAO2B,KAAK,wBAAZ,SACE,cAACvB,EAAD,MAEF,cAAC,IAAD,CAAOuB,KAAK,uBAAZ,SACE,cAACH,EAAD,MAGF,cAAC,IAAD,UACE,cAACrB,EAAD,eCvBZyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9368fd67.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport default function useFetch(url) {\r\n  const [data, setData] = useState([]);\r\n  \r\n  useEffect( () => {\r\n      // API 비동기 통신을 위해 fetch 호출\r\n      fetch(url) \r\n      .then(response => {\r\n        // http 응답인 response를 json으로 변환\r\n        return response.json()\r\n      })\r\n      .then(data => {\r\n        setData(data);\r\n      });\r\n  }, [url] );\r\n\r\n  return data;\r\n  \r\n}","import { Link } from \"react-router-dom\";\r\nimport useFetch from \"../hooks/useFetch\";\r\n\r\nexport default function DayList() {\r\n\r\n  const days = useFetch(\"http://localhost:3001/days\");\r\n  \r\n  // 느린 인터넷 환경에서 사용하는 경우 loading중임을 화면에 띄움\r\n  if(days.length === 0) {\r\n    return <span>Loading...</span>\r\n  }\r\n  \r\n  return (\r\n    <ul className=\"list_day\">\r\n      {days.map(day => (\r\n        <li key={day.id}>\r\n          <Link to={`/voca_app/day/${day.day}`}>Day {day.day}</Link>\r\n        </li>\r\n      ) )}\r\n    </ul>\r\n  );\r\n}","import { Link } from \"react-router-dom\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>\r\n        <Link to=\"/voca_app\">TOEIC Voca (Advanced)</Link>\r\n      </h1>\r\n      <div className=\"menu\">\r\n        <Link to=\"/voca_app/create_word\" className=\"link\">\r\n            단어 추가\r\n        </Link>\r\n        <Link to=\"/voca_app/create_day\" className=\"link\">\r\n            Day 추가\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { useState } from \"react\";\r\n\r\nexport default function Word({ word: w }) {\r\n  const [word, setWord] = useState(w);\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [isDone, setIsDone] = useState(word.isDone);\r\n\r\n  function toggleShow() {\r\n    setIsShow(!isShow);\r\n  }\r\n\r\n  function toggleDone() {\r\n    // 단어 체크 시 새로고침해도 isDone은 유지됨\r\n    fetch(`http://localhost:3001/words/${word.id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        ...word,\r\n        isDone: !isDone\r\n      }),\r\n    })\r\n    .then( response => {\r\n      if(response.ok) {\r\n        setIsDone(!isDone);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function del() {\r\n    if(window.confirm(\"삭제 하시겠습니까?\")) {\r\n      fetch(`http://localhost:3001/words/${word.id}`, {\r\n        method: \"DELETE\",\r\n      }).then( response => {\r\n        if(response.ok) {\r\n          setWord({ id: 0});\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  if (word.id === 0) {\r\n    return null;\r\n  }\r\n  \r\n  return (\r\n    <tr className={ isDone ? \"off\" : \"\" }>\r\n      <td>\r\n        <input type=\"checkbox\" checked={isDone}\r\n        onChange={toggleDone}></input>\r\n      </td>\r\n      <td>{word.eng}</td>\r\n      <td>{isShow && word.kor}</td>\r\n      <td>\r\n        <button onClick={toggleShow}>\r\n          { isShow ? \"뜻 숨기기\" : \"\\u00A0뜻 보기\\u00A0\" }\r\n        </button>\r\n        <button onClick={del} className=\"btn_del\">삭제</button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}","import Word from \"./Word\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useFetch from \"../hooks/useFetch\";\r\n\r\nexport default function Day() {\r\n\r\n  // 링크 속 day 넘버에 맞춰서 \"Day 넘버\"를 띄움\r\n  const { day } = useParams();\r\n  \r\n  const words = useFetch(`http://localhost:3001/words?day=${day}`);\r\n\r\n  return (\r\n    <>\r\n      <h2>Day {day}</h2>\r\n      {words.length === 0 && <span>Loading...</span>}\r\n      <table>\r\n        <tbody>\r\n          {words.map(word => (\r\n            <Word word={word} key={word.id} />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};","import { Link } from \"react-router-dom\";\r\n\r\nexport default function EmptyPage() {\r\n  return (\r\n    <>\r\n      <h2>잘못된 접근입니다.</h2>\r\n      <Link to=\"/voca_app\">돌아가기</Link>\r\n    </>\r\n  )\r\n\r\n\r\n}","import { useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useFetch from \"../hooks/useFetch\";\r\n\r\nexport default function CreateWord() {\r\n  const days = useFetch(\"http://localhost:3001/days\");\r\n  const history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  function onSubmit(e) {\r\n    // 저장 버튼 누를 때 새로고침 되지 않도록 구현\r\n    e.preventDefault();\r\n\r\n    // 단어 추가에서 저장 버튼을 여러 번 클릭해도 한 번만 저장됨\r\n    if(!isLoading) {\r\n      setIsLoading(true);\r\n      fetch(\"http://localhost:3001/words/\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json', \r\n      },\r\n      body: JSON.stringify({ \r\n        day: dayRef.current.value,\r\n        eng: engRef.current.value,\r\n        kor: korRef.current.value,\r\n        isDone: false,\r\n      }),\r\n      })\r\n      .then( response => {\r\n        if(response.ok) {\r\n          alert(\"생성이 완료 되었습니다\");\r\n          // 저장을 누르면 해당 day 페이지로 바로 이동\r\n          history.push(`/voca_app/day/${dayRef.current.value}`)\r\n          setIsLoading(false);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // input창에 적힌 값을 얻기 위해 useRef 이용\r\n  const engRef = useRef(null);\r\n  const korRef = useRef(null);\r\n  const dayRef = useRef(null);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div className=\"input_area\">\r\n        <label>Eng</label>\r\n        <input type=\"text\" placeholder=\"abandon\" ref={engRef} />\r\n      </div>\r\n      <div className=\"input_area\">\r\n        <label>Kor</label>\r\n        <input type=\"text\" placeholder=\"버리다\" ref={korRef} />\r\n      </div>\r\n      <div className=\"input_area\">\r\n        <label>Day</label>\r\n        <select ref={dayRef}>\r\n          {days.map(day => (\r\n            <option key={day.id} value={day.day}>\r\n              {day.day}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      {/* 느린 인터넷 환경에서 사용하는 경우 저장되는 동안 \"Saving...\"을 띄움 */}\r\n      <button\r\n        style={{\r\n          opacity: isLoading ? 0.5 : 1,\r\n        }}\r\n      >\r\n        {isLoading ? \"Saving...\" : \"저장\"}</button>\r\n    </form>\r\n  );\r\n}","import { useHistory } from \"react-router-dom\";\r\nimport useFetch from \"../hooks/useFetch\";\r\n\r\nexport default function CreateDay() {\r\n  const days = useFetch(\"http://localhost:3001/days\");\r\n  const history = useHistory();\r\n\r\n  function addDay() {\r\n    fetch(\"http://localhost:3001/days/\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json', \r\n      },\r\n      body: JSON.stringify({ \r\n        day: days.length + 1,\r\n      }),\r\n    })\r\n    .then( response => {\r\n      if(response.ok) {\r\n        alert(\"생성이 완료 되었습니다\");\r\n        // 추가를 누르면 첫 페이지로 바로 이동\r\n        history.push(\"/voca_app\");\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n  <div>\r\n    <h3>현재 일수: {days.length}일</h3>\r\n    <button onClick={addDay}>Day 추가</button>\r\n  </div>\r\n  );\r\n}","import DayList from \"./components/DayList\";\r\nimport Header from \"./components/Header\";\r\nimport Day from \"./components/Day\";\r\nimport EmptyPage from \"./components/EmptyPage\";\r\nimport CreateWord from \"./components/CreateWord\";\r\nimport CreateDay from \"./components/CreateDay\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/voca_app\">\r\n            <DayList />\r\n          </Route>\r\n          <Route path=\"/voca_app/day/:day\">\r\n            <Day />\r\n          </Route>\r\n          <Route path=\"/voca_app/create_word\">\r\n            <CreateWord />\r\n          </Route>\r\n          <Route path=\"/voca_app/create_day\">\r\n            <CreateDay />\r\n          </Route>\r\n          {/* 위의 path에 해당되지 않는 경우 */}\r\n          <Route>\r\n            <EmptyPage />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}